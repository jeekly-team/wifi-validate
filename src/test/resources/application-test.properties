spring.datasource.platform:h2

spring.datasource.initialize:true

spring.datasource.sqlScriptEncoding:UTF-8

spring.datasource.schema:classpath:data/h2/stringid/schema-h2.sql
spring.datasource.data:classpath:data/h2/stringid/data-h2.sql
#spring.datasource.schema:classpath:data/h2/longid/schema-h2.sql
#spring.datasource.data:classpath:data/h2/longid/data-h2.sql

spring.datasource.url:jdbc:h2:mem:biwifi
spring.datasource.driverClassName:org.h2.Driver
spring.datasource.username:sa
spring.datasource.password:

#h2 dialect
hibernate.dialect:org.hibernate.dialect.H2Dialect

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl:true
spring.jpa.show-sql:true
#use 'ddl-auto:create-drop' you can always use data.sql to initialize new data.
# \u4f7f\u7528jpa \u81ea\u52a8\u5efa\u8868\u65f6\u8bbe\u7f6e 'ddl-auto:create-drop'\uff0c\u5982\u679cspring.datasource.initialize:true\u4f1a\u6709\u51b2\u7a81\uff0c\u9020\u6210\u91cd\u590d\u5efa\u8868\uff0c\u53ef\u8bbe\u7f6eddl-auto:none\u89e3\u51b3
spring.jpa.hibernate.ddl-auto:none

#jyzn 
jyzn.wifi.msgvalidate.url:http://lovalhost:8080/
jyzn.wifi.msgvalidate.accout\uff1azyt
jyzn.wifi.msgvalidate.pwd\uff1ajeekly